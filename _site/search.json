[
  {
    "objectID": "2017/dd-journals-frequency/index.html",
    "href": "2017/dd-journals-frequency/index.html",
    "title": "30 issues of Demographic Digest - the most frequent journals",
    "section": "",
    "text": "This week, the 30-th issue of my Demographic Digest was published.\nDemographic Digest is my project that started in November 2015. Twice a month I select fresh demographic papers and write brief summaries of them in Russian to be published in Demoscope Weekly, the most popular Russian journal/website in social sciences. If you read Russian, you may want to browse the archive or visit the website of the project (which is still to be filled).\nThe project is in the transitional phase now. Since 2016 Demographic Digest welcomes contributions from from external authors. In February 2017 I launched the first iteration of a project for the students of National Research University Higher School of Economics.\nFor that, I exported the bibliographic data of all the papers covered in Demographic Digest. I use Zotero as a reference manager; the paper records are exported as a single .bib file, which I then saved as a plain text (.txt) file. Then I read this data in R, cleaned it, and finally visualized.\nFor one journal title, Ageing and Society, I failed to replace the “&” using regular expressions. This one is to be fixed manually. I also corrected the title of Lancet journal removing the article “The”. Finally, I corrected the frequencies for Population Studies and Population and Development Review subtracting 6, because for both journals I provided lists of most cited papers as a bonus. Following the same logic, I cleaned the data from the papers that appeared in the bonus part.\nTo provide some additional metrics of the journals, I downloaded bibliometric data from the SCImago Journal & Country Rank projecthttp://www.scimagojr.com/aboutus.php. Demographic journals usually have rather low SJR, compared to medical journals; that’s why I downloaded the data only for journals in Social Sciences (the.xlsx file). Then I read the data in R and join to my data frame."
  },
  {
    "objectID": "2017/dd-journals-frequency/index.html#here-is-how-the-output-looks",
    "href": "2017/dd-journals-frequency/index.html#here-is-how-the-output-looks",
    "title": "30 issues of Demographic Digest - the most frequent journals",
    "section": "Here is how the output looks",
    "text": "Here is how the output looks\n\nNote that the lion’s share of Population Studies is mainly explained by the first issue of Demographic Digest, in which I covered all the papers from the brilliant special issue Population — The long view."
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html",
    "href": "2017/denmark-nuts-reconstruction/index.html",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "",
    "text": "NUTS stands for the Nomenclature of Territorial Units For Statistics. The history of NUTS dates back to the beginning of 1970s, when European countries developed unified standards for systems of administrative geography. It was not until the beginning of this century when such a system finally became widely used. There are three main hierarchical levels of NUTS, and the most commonly used for regional analysis is NUTS-2.\nFigure 1. Illustration of the principle of NUTS hierarchical system\nOne of the objectives of NUTS was to provide more or less comparable administrative divisions for all countries of Europe. Nevertheless, in 2013, population figures for single NUTS-2 regions ranged from 28.5 thousands in Aland island (Finland) to almost 12 million in Ile-de-France (Paris and surroundings, France)."
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html#the-broken-time-series",
    "href": "2017/denmark-nuts-reconstruction/index.html#the-broken-time-series",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "The broken time series",
    "text": "The broken time series\nQuite arbitrary in its essence, territorial division tends to evolve. Changes in administrative boundaries can cause problems for regional analysis as they break the time series and therefore make it harder to analyze trends. Despite this inconvenience, the boundaries of regions actually change quite often based on the needs and interests of local or national governmenta. Eurostat tracks all modifications providing detailed explanations of all the changes that happen between versions of NUTS (figure 2).\nFigure 2. Changes in NUTS between versions 2006 and 2010\nDespite this, Eurostat does not recalculate historic demographic data to match the most recent NUTS version. This means that, for the most recent version of NUTS, there is missing data for all years before the latest administrative change. So researchers have to reconstruct historical data manually to obtain a long time series. Of course, crude assumptions often have to be accepted in order to approximate the population figures for the current regions that did not exist in the past.\nTo make thing even more complex, Eurostat provides the data only for the latest version of NUTS (at least, I did not work out how to download previous versions). In my PhD project I carry out regional analysis for the NUTS-2 regions of European Union. To have the longest possible time series, when I did the data preparation in 2015, I chose the 2010 version of NUTS, on which the regional demographic projection EUROPOP2013 is based. For reproducibility, I uploaded the precise versions of the Eurostat data at NUTS-2 level on population age structures and deaths, as downloaded in 2015, to figshare."
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html#denmark",
    "href": "2017/denmark-nuts-reconstruction/index.html#denmark",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "Denmark",
    "text": "Denmark\nSome countries had to perform major changes in their systems of territorial division to fit the NUTS standards. The most significant reform happened in Denmark in 2007, where the former 271 municipalities were transformed into the new 98 municipalities. At the same time, NUTS was introduced, so that 98 municipalities were allocated to 11 NUTS-3 regions, which aggregate to 5 NUTS-2 regions. Typically, for a small country, there is only one NUTS-1 region in Denmark, which is the whole country.\nAs far as I know, there was no official attempt of Eurostat to reconstruct the time series for Denmark before 2007. The typical map of Eurostat for the pre-2007 period shows Denmark as “no data available” country (figure 3).\nFigure 3. Life expectancy at birth in European NUTS-2 regions, 2006; a screenshot from the Eurostat’s interactive data exploratory tool\nSuch a data loss is somewhat surprising for a country such as Denmark. It might be quite difficult to match the old and new municipal systems; but it should be relatively easy to re-aggregate the old municipalities into the new (higher level) NUTS regions. That is precisely what I did during my data preparation1 and what I now want to share in this post.1 I have spent quite some time searching if someone else did the job before me and failed to find.\nThe task is basically to identify which of the old 271 municipalities are located within the modern 11 NUTS-3 regions and to aggregate the municipal data. Then, NUTS-3 data is easily aggregated for the NUTS-2 level. Such a task could have meant working late into the night, but luckily we live in the GIS era. I used GIS to match the old municipalities with the NUTS-3 regions. Here I want to show (with code) how the task can be performed using the amazing and opensource R. Below I show the process of matching old municipalities to the NUTS regions and the process that I used to aggregate population data."
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html#data",
    "href": "2017/denmark-nuts-reconstruction/index.html#data",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "Data",
    "text": "Data\nThe data on the population age structures for the old 271 municipalities of Denmark was downloaded from the official website of Statistics Denmark. The system only allows you to grab up to 10K cells for unregistered users and up to 100K for registered users. So the process of downloading the data involves some tedious manual manipulations. For the purpose of my phd project, I downloaded the data for the period 2001-2006; but, if needed, the data is available since 1979. The data, downloaded in 2015 and ‘tidied up’ can be found here.\nI have spent a lot of time trying to find geodata with the boundaries of the old municipalities. Now, coming back to the topic more than 1.5 year later, I failed to identify the original source of the shapefile, though I am pretty sure that it came from here 2. The copy of the shapefile that I used can be found here.2 There is a note on the website saying that, due to a planned change in the structure of the website, there might be some problems with data accuisition. I failed to download the geodata on 2017-02-23.\nFinally, we need a shapefile of NUTS-3 regions. It can be easily downloaded from Eurostat geodata repository. The shapefile that I used is “NUTS_2010_20M_SH.zip”. The selection of the 11 Danish regions can be found here.\nThe projection used for both shapefiles is ESPG-3044, the one often used to map Denmark.\nNow, the code to prepare the R session and load the data.\n\n# set locale and encoding parameters to read Danish\nif(Sys.info()['sysname']==\"Linux\"){\n        Sys.setlocale(\"LC_CTYPE\", \"da_DK.utf8\")\n        danish_ecnoding <- \"WINDOWS-1252\"\n}else if(Sys.info()['sysname']==\"Windows\"){\n        Sys.setlocale(\"LC_CTYPE\", \"danish\")\n        danish_ecnoding <- \"Danish_Denmark.1252\"\n}\n\n# load required packages (install first if needed)\nlibrary(tidyverse) # version: 1.0.0\nlibrary(ggthemes) # version: 3.3.0\nlibrary(rgdal) # version: 1.2-4\nlibrary(rgeos) # version: 0.3-21\nlibrary(RColorBrewer) # version: 1.1-2\nmypal <- brewer.pal(11, \"BrBG\")\nlibrary(fuzzyjoin) # version: 0.1.2\nlibrary(viridis) # version: 0.3.4\n\n# load Denmark pop structures for the old municipalities\ndf <- read_csv(\"https://ikashnitsky.github.io/share/1703-nuts2-denmark/BEF1A.csv.gz\")\n\n# create a directory for geodata\nifelse(!dir.exists(\"geodata\"), dir.create(\"geodata\"), \"Directory already exists\")\n\n# download, unzip and read Danish NUTS-3 geodata (31KB)\nurl_nuts <- \"https://ikashnitsky.github.io/share/1703-nuts2-denmark/denmark-nuts3-espg3044.tgz\"\npath_nuts <- \"geodata/denmark-nuts3-espg3044.tgz\"\nifelse(!file.exists(path_nuts), download.file(url_nuts, path_nuts, mode=\"wb\"), 'file alredy exists')\n# If there are problems downloading the data automatically, please download it manually from\n# https://ikashnitsky.github.io/share/1703-nuts2-denmark/denmark-nuts3-espg3044.tgz\nuntar(tarfile = path_nuts, exdir = \"geodata\")\n\nsp_nuts3 <- readOGR(dsn = \"geodata/.\", layer = \"denmark-nuts3-espg3044\")\ngd_nuts3 <- fortify(sp_nuts3, region = \"NUTS_ID\") # to the ggplot format\n\n\n# download, unzip and read Danish old municipal geodata (6.0MB)\nurl_mun <- \"https://ikashnitsky.github.io/share/1703-nuts2-denmark/kommune2006win1252.tgz\"\npath_mun <- \"geodata/kommune2006win1252.tgz\"\nifelse(!file.exists(path_mun), download.file(url_mun, path_mun, mode=\"wb\"), 'file alredy exists')\n# If there are problems downloading the data automatically, please download it manually from\n# https://ikashnitsky.github.io/share/1703-nuts2-denmark/kommune2006utf8.tgz\nuntar(tarfile = path_mun, exdir = \"geodata\")\n\nsp_mun <- readOGR(dsn = \"geodata/.\", layer = \"kommune2006win1252\", encoding = danish_ecnoding) \ngd_mun <- fortify(sp_mun)\n\n# coordinates of the municipalities\nmun_coord <- bind_cols(as.data.frame(coordinates(sp_mun)), sp_mun@data[,1:3]) %>% \n        transmute(long = V1, lat = V2, enhedid, objectid, name = navn)"
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html#spatial-matching",
    "href": "2017/denmark-nuts-reconstruction/index.html#spatial-matching",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "Spatial matching",
    "text": "Spatial matching\nLet’s first have a look at the map.\n\nggplot()+\n        geom_polygon(data = gd_nuts3, aes(long, lat, group = group), \n                     color = brbg[3], fill = \"grey90\", size = 1)+\n        geom_point(data = mun_coord, aes(long, lat), \n                   color = brbg[10], size = 1)+\n        theme_map()\n\nFigure 4. Reference map of the old municipalities and NUTS-3 regions of Denmark\nWe can easily see that the boundaries of the municipalities (light blue) are much more precise than that of the NUTS-3 regions (orange/brown). This is not a problem as long as all the centroids of the municipalities fall within the boundaries of the NUTS-3 regions, which seems to be true for all municipalities except for the easternmost one. A quick check reveals that this is Christiansø, a tiny fortified island, whose history goes back to the Middle Ages. It has a special status and is not included into the NUTS system. For further manipulations, Christiansø can safely merge it with the close-by Bornholm.\nTo identify which municipalities fall into which NUTS regions, I use the spatial overlap function (over) from sp package. Here I should thank Roger Bivand, a person who made it possible to do any spatial analysis in R.\n\n# municipality coordinates to Spatial\nmun_centr <- SpatialPoints(coordinates(sp_mun), proj4string = CRS(proj4string(sp_nuts3)))\n\n# spatial intersection with sp::over\ninter <- bind_cols(mun_coord, over(mun_centr, sp_nuts3[,\"NUTS_ID\"])) %>% \n        transmute(long, lat, objectid,\n                  nuts3 = as.character(NUTS_ID),\n                  nuts2 = substr(nuts3, 1, 4))\n\nLet’s again check visually if the spatial matching worked okay.\n\nggplot()+\n        geom_polygon(data = gd_mun, aes(long, lat, group = group), \n                     color = brbg[9], fill = \"grey90\", size = .1)+\n        geom_polygon(data = gd_nuts3, aes(long, lat, group = group), \n                     color = brbg[3], fill = NA, size = 1)+\n        geom_point(data = inter, aes(long, lat, color = nuts3), size = 1)+\n        geom_point(data = inter[is.na(inter$nuts3),], \n                   aes(long, lat), color = \"red\", size = 7, pch = 1)+\n        theme_map(base_size = 15)+\n        theme(legend.position = c(1, 1),\n              legend.justification = c(1, 1))\n\nFigure 5. Checking the spatial intersection between the old municipalities and NUTS-3 regions of Denmark\nNot bad. But there is an “NA” category that represents all the cases where the spatial match failed. How many such cases do we have?\n\n# how many failed cases do we have\nsum(is.na(inter$nuts3))\n\n\n## [1] 3\n\n\n# where the intersection failed\ninter[is.na(inter$nuts3),]\n\n\n##         long     lat objectid nuts3 nuts2\n## 23  892474.0 6147918    46399  <NA>  <NA>\n## 65  504188.4 6269329   105319  <NA>  <NA>\n## 195 533446.8 6312770    47071  <NA>  <NA>\n\nAs there are only 3 cases, I decided to fix them manually.\n\n# fix the three cases manually\nfixed <- inter\nfixed[fixed$objectid==\"46399\", 4:5] <- c(\"DK014\", \"DK01\")\nfixed[fixed$objectid==\"105319\", 4:5] <- c(\"DK041\", \"DK04\")\nfixed[fixed$objectid==\"47071\", 4:5] <- c(\"DK050\", \"DK05\")\n\nThe final visual check.\n\nggplot()+\n        geom_polygon(data = gd_mun, aes(long, lat, group = group), \n                     color = brbg[9], fill = \"grey90\", size = .1)+\n        geom_polygon(data = gd_nuts3, aes(long, lat, group = group), \n                     color = brbg[3], fill = NA, size = 1)+\n        geom_point(data = fixed, aes(long, lat, color = nuts3), size = 1)+\n        theme_map(base_size = 15)+\n        theme(legend.position = c(1, 1),\n              legend.justification = c(1, 1))\n\nFigure 6. Re-checking the spatial intersection between the old municipalities and NUTS-3 regions of Denmark\nNow everything seems okay."
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html#joining-spatial-and-statistical-data-fuzzy-join",
    "href": "2017/denmark-nuts-reconstruction/index.html#joining-spatial-and-statistical-data-fuzzy-join",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "Joining spatial and statistical data (fuzzy join)",
    "text": "Joining spatial and statistical data (fuzzy join)\nThe next task is to join the spatial data and statistical data together. The spatial layer for municipalities does not contain the codes that are used by Statistics Denmark, so I have to match municipalities in the two datasets by their names. This is quite a difficult task. Names can be written slightly differently, there are some special characters in Danish alphabet, and some municipalities may have experienced a change of name. To solve the task most efficiently, I used the ‘Fuzzy String Matching’ approach which is implemented in the fuzzyjoin package by David Robinson.\nFirst, I simplify the names in both datasets turning them into lowercase, replacing the character “å” with “aa”, and removing the “Kommune” word in the spatial dataset names. Please note that I downloaded (separately) a small selection from Statistics Denmark to have a lightweight dataframe with municipal codes and names.\n\n# simplify municipalities names\nmun_geo <- mun_coord %>%         \n        transmute(name = sub(x = name, \" Kommune\", replacement = \"\"), objectid) %>% \n        mutate(name = gsub(x = tolower(name), \"å\", \"aa\"))\n\nmun_stat <- read.csv2(\"https://ikashnitsky.github.io/share/1703-nuts2-denmark/stat-codes-names.csv\", \n                      fileEncoding = danish_ecnoding) %>% \n        select(name) %>% \n        separate(name, into = c(\"code\", \"name\"), sep = \" \", extra = \"merge\") %>% \n        mutate(name = gsub(\"\\\\s*\\\\([^\\\\)]+\\\\)\", \"\", x = name)) %>% \n        mutate(name = gsub(x = tolower(name), \"å\", \"aa\"))\n\nLet’s try fuzzy join.\n\n# first attempt\nfuz_joined_1 <- regex_left_join(mun_geo, mun_stat, by = \"name\")\n\nThe resulting dataframe has 278 rows instead of 271. That means that for some municipalities in the spatial dataset there was more than one match. Let’s identify them.\n\n# identify more that 1 match (7 cases) and select which to drop\nfuz_joined_1 %>% group_by(objectid) %>% mutate(n = n()) %>% filter(n > 1)\n\n\n## Source: local data frame [14 x 5]\n## Groups: objectid [7]\n## \n##         name.x objectid  code      name.y     n\n##          <chr>    <dbl> <chr>       <chr> <int>\n## 1       haslev   105112   313      haslev     2\n## 2       haslev   105112   403       hasle     2\n## 3  brønderslev    47003   739       rønde     2\n## 4  brønderslev    47003   805 brønderslev     2\n## 5    hirtshals    47037   817        hals     2\n## 6    hirtshals    47037   819   hirtshals     2\n## 7      rønnede    46378   385     rønnede     2\n## 8      rønnede    46378   407       rønne     2\n## 9     hvidebæk    46268   317    hvidebæk     2\n## 10    hvidebæk    46268   681     videbæk     2\n## 11    ryslinge    46463   477    ryslinge     2\n## 12    ryslinge    46463   737          ry     2\n## 13     aarslev    46494   497     aarslev     2\n## 14     aarslev    46494   861        aars     2\n\nSo, for 7 municipalities, two matches were found. I will drop the imperfect match variants in the next iteration of fuzzy join.\nThe other issue is the municipalities for which no match was found in that statistical data.\n\n# show the non-matched cases\nfuz_joined_1 %>% filter(is.na(code))\n\n\n##              name.x objectid code name.y\n## 1              faxe   105120 <NA>   <NA>\n## 2 nykøbing falsters    46349 <NA>   <NA>\n## 3       herstederne    46101 <NA>   <NA>\n\nAs there are only three such cases, I corrected them manually in the spatial data to match the statistical data. There are two cases of a difference in the way the name of municipality are written and one case of name change.\n\n# correct the 3 non-matching geo names\nmun_geo_cor <- mun_geo\n\nmun_geo_cor[mun_geo_cor$name==\"faxe\", \"name\"] <- \"fakse\"\nmun_geo_cor[mun_geo_cor$name==\"nykøbing falsters\", \"name\"] <- \"nykøbing f.\"\nmun_geo_cor[mun_geo_cor$name==\"herstederne\", \"name\"] <- \"albertslund\"\n\nNow the second attempt to match the datasets (spatial dataset is corrected).\n\n# second attempt\nfuz_joined_2 <- regex_left_join(mun_geo_cor, mun_stat, by = \"name\")\n\n# drop non-perfect match\nfuz_joined_2 <- fuz_joined_2 %>% \n        group_by(objectid) %>% \n        mutate(n = n()) %>% \n        ungroup() %>% \n        filter(n < 2 | name.x==name.y)\n\nfuz_joined_2 <- fuz_joined_2 %>% transmute(name = name.x, objectid, code)\n\nThe output looks perfect. Now, the last step – using the matched “objectid” field, I will finally attach the NUTS data to statistical codes.\n\n# finally, attach the NUTS info to matched table\nkey <- left_join(fuz_joined_2, fixed, \"objectid\")"
  },
  {
    "objectID": "2017/denmark-nuts-reconstruction/index.html#aggregate-old-municipal-data-to-nuts-levels",
    "href": "2017/denmark-nuts-reconstruction/index.html#aggregate-old-municipal-data-to-nuts-levels",
    "title": "R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark",
    "section": "Aggregate old municipal data to NUTS levels",
    "text": "Aggregate old municipal data to NUTS levels\nThe previous manipulations yielded a dataframe that links statistical codes of the old municipalities with the corresponding NUTS regions. The last thing that has to be done is aggregation. I will attach the “key” dataset to a statistical dataset and aggregate the data at NUTS-3 and NUTS-2 levels.\n\n# finally, we only need to aggregate the old stat data\ndf_agr <- left_join(key, df, \"code\") %>% \n        filter(!is.na(name)) %>% \n        gather(\"year\", \"value\", y2001:y2006)\n\ndf_nuts3 <- df_agr %>% \n        group_by(year, sex, age, nuts3) %>% \n        summarise(value = sum(value)) %>% \n        ungroup()\n\ndf_nuts2 <- df_agr %>% \n        group_by(year, sex, age, nuts2) %>% \n        summarise(value = sum(value)) %>% \n        ungroup()\n\nLet’s now calculate the shares of working age population in Danish NUTS-3 regions in 2001 and map the information.\n\n# total population in 2001 by NUTS-3 regions\ntot_01 <- df_nuts3 %>% \n        filter(year==\"y2001\") %>% \n        group_by(nuts3) %>% \n        summarise(tot = sum(value, na.rm = TRUE)) %>% \n        ungroup()\n\n# working-age population in 2001 by NUTS-3 regions\nworking_01 <- df_nuts3 %>% \n        filter(year==\"y2001\", age %in% paste0(\"a0\", 15:64)) %>% \n        group_by(nuts3) %>% \n        summarise(work = sum(value, na.rm = TRUE)) %>% \n        ungroup()\n\n# calculate the shares of working age population\nsw_01 <- left_join(working_01, tot_01, \"nuts3\") %>% \n        mutate(sw = work / tot * 100)\n\n\n# map the shares of working age population in 2001 by NUTS-3 regions\nggplot()+\n        geom_polygon(data = gd_nuts3 %>% left_join(sw_01, c(\"id\" = \"nuts3\")),\n                     aes(long, lat, group = group, fill = sw), \n                     color = \"grey50\", size = 1) +\n        scale_fill_viridis()+\n        theme_map(base_size = 15)+\n        theme(legend.position = c(1, 1),\n              legend.justification = c(1, 1))\n\nFigure 7. The share of working age (15-64) population by NUTS-3 regions of Denmark in 2001\nThe result (thankfully!) looks realistic, with higher shares of the working-age population in the capital region, and in other regions that have relatively big cities.\n\n\n\nThis post is written for Demotrends."
  },
  {
    "objectID": "2017/gender-gap-in-swedish-mortality/index.html",
    "href": "2017/gender-gap-in-swedish-mortality/index.html",
    "title": "Gender gap in Swedish mortality",
    "section": "",
    "text": "Sweden, with its high quality statistical record since 1748, is the natural choice for any demographic study that aims to cover population dynamics during a long period of time."
  },
  {
    "objectID": "2017/gender-gap-in-swedish-mortality/index.html#data",
    "href": "2017/gender-gap-in-swedish-mortality/index.html#data",
    "title": "Gender gap in Swedish mortality",
    "section": "Data",
    "text": "Data\nThe data used for this visualization comes from Human Mortality Database. It can be easily accessed from an R session using HMDHFDplus package by Tim Riffe (for examples see my previous posts - one and two). For this exercise, I will use the dataset for Sweden that was provided for an application task for Rostock Retreat Visualization1.1 By using this data, I agree to the user agreement\n\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(extrafont)\n\n# download data\ndf_swe <- read_csv(\"http://www.rostock-retreat.org/files/application2017/SWE.csv\")\n# copy at https://ikashnitsky.github.io/doc/misc/application-rostock-retreat/SWE.csv\n\nyears <- c(1751, 1800, 1850, 1900, 1925, 1950, 1960, 1970, 1980, 1990, 2000, 2010)\n\n# select years and calculate male-to-female arte-ratio of mortality\ndf_selected <- df_swe %>% select(Year, Sex, Age, mx) %>% \n        filter(Year %in% years) %>% \n        spread(Sex, mx) %>% \n        transmute(year = Year, age = Age, value = m / f)"
  },
  {
    "objectID": "2017/gender-gap-in-swedish-mortality/index.html#visualization",
    "href": "2017/gender-gap-in-swedish-mortality/index.html#visualization",
    "title": "Gender gap in Swedish mortality",
    "section": "Visualization",
    "text": "Visualization\n\nggplot(df_selected)+\n        geom_hline(yintercept = 1, color = 'grey25', size = .5)+\n        geom_point(aes(age, value), size = 2, pch=1, color = 'grey50')+\n        stat_smooth(aes(age, value, group = 1, color = factor(year)), se = F)+\n        facet_wrap(~year, ncol = 3)+\n        labs(title = \"Male-to-female age-specific mortality rate ratio, Sweden\",\n             subtitle = \"Untill quite recent times, mortality of females was not much lower than that of males\",\n             caption = \"\\nData: Human Mortality Database (https://mortality.org)\n             Note: Colored lines are produced with loess smoothing\",\n             x = \"Age\", y = \"Rate ratio\")+\n        theme_minimal(base_size = 15, base_family = \"Roboto Condensed\") +\n        theme(legend.position = 'none',\n              plot.title = element_text(family = \"Roboto Mono\"))"
  },
  {
    "objectID": "2017/gender-gap-in-swedish-mortality/index.html#comment",
    "href": "2017/gender-gap-in-swedish-mortality/index.html#comment",
    "title": "Gender gap in Swedish mortality",
    "section": "Comment",
    "text": "Comment\nToday it is common knowledge that male mortality is always higher than female. There are more males being born, then eventually the sex ratio levels due to higher male mortality (see my previous post). Though, male mortality was not always much higher. Back in the days, when infant mortality was much higher and women used to have much higher fertility, there was almost no gender gap in age-specific mortality levels. Constant pregnancy and frequent childbirths had a strong negative impact on female health and survival statistics. We can see that only in the second half of the 20-th century gender gap in mortality became substantial in Sweden.\n\n\n\nThis post is based on my earlier tweet and gist."
  },
  {
    "objectID": "2017/hello-r-world/index.html",
    "href": "2017/hello-r-world/index.html",
    "title": "Hello R world post",
    "section": "",
    "text": "Welcome to my blog!\nMy name is Ilya, I am a demographer. Here I plan to post some research related stuff. As I am crazy about R, my post will touch upon this tool/environment – I will share some tricks and cool visualizations. Eventually, I hope to contribute to the amazing R-bloggers project. First, I am going to post older bits – to gain momentum.\n\nJust to start with, let me show you a small and handy self-written R function.\nQuite often, visualizing data in R, we compose color palettes manually. It is nice to have a function that shows the actual colors of a vector with color values. Here it is.\n\nglimpse_colors <- function(colors_string){\n        n <- length(colors_string)\n        hist(1:n, breaks = 0:n, col = colors_string)\n}\n\nThe function takes a vector of colors as input and produces a basic uniform histogram with one bar for each color, filled accordingly. Let’s try it out. First, we create some colors, and then visualize them.\n\nlibrary(RColorBrewer)\npal <- brewer.pal(n = 9, name = 'BrBG')\nglimpse_colors(pal)\n\n\n\n\nEnjoy!\nP.S. If something similar exists in one of the well known packages, please tell me.\n***s"
  },
  {
    "objectID": "2017/hmd-all-sex-ratio/index.html",
    "href": "2017/hmd-all-sex-ratio/index.html",
    "title": "Sex ratios in all countries from Human Mortality Database",
    "section": "",
    "text": "Sex ratios reflect the two basic regularities of human demographics: 1) there are always more boys being born; 2) males experience higher mortality throughout their life-course. The sex ratio at birth does not vary dramatically1 and is more or less constant at the level of 105-106 boys per 100 girls. Hence, differences in the sex ratio profiles of countries mainly reflect gender gap in mortality. In this post I will compare sex ratios age profiles in all countries included in Human Mortality Database.1 There are cases of big deviations from this natural constant. The most well known one is the skewed sex ratio in China, where decades of One Child Policy together with strong traditional son preference resulted in selective abortions. Read more: Frejka et. al (2010); Wang (2011); Basten and Verropoulou (2013).\nR gives amazing opportunities to grab data fast and easy. Thanks to Tim Riffe’s HMDHFDplus package, one can now download HMD data with just a couple of lines of R code.\nThere is a handy function in HMDHFDplus package – getHMDcountries(). It lists the codes for all countries in HMD. So it becomes really easy to loop through the database and download data for all countries.\n\n# load required packages\nlibrary(tidyverse) # version 1.0.0\nlibrary(HMDHFDplus) # version 1.1.8\n\ncountry <- getHMDcountries()\n\nexposures <- list()\nfor (i in 1: length(country)) {\n        cnt <- country[i]\n        exposures[[cnt]] <- readHMDweb(cnt, \"Exposures_1x1\",\n                                       ik_user_hmd, ik_pass_hmd)\n        \n        # let's print the progress\n        paste(i,'out of',length(country)) \n}\n\nPlease note, the arguments ik_user_hmd and ik_pass_hmd are my login credidantials at the website of Human Mortality Database, which are stored locally at my computer. In order to access the data, one needs to create an account at http://www.mortality.org/ and provide his own credidantials to the readHMDweb() function.\nNext, I select 2012 for comparison – it is quite recent, and for most of the HMD countries there are data for 2012. The loop goes through each of the countries’ dataframe in exposures list, selects data for 2012 and calculates sex ratio at each age. I also remove data for several populations (like East and West Germany separately).\n\nsr_age <- list()\n\nfor (i in 1:length(exposures)) {\n        di <- exposures[[i]]\n        sr_agei <- di %>% select(Year,Age,Female,Male) %>% \n                filter(Year %in% 2012) %>%\n                select(-Year) %>%\n                transmute(country = names(exposures)[i],\n                          age = Age, sr_age = Male / Female * 100)\n        sr_age[[i]] <- sr_agei\n}\nsr_age <- bind_rows(sr_age)\n\n# remove optional populations\nsr_age <- sr_age %>% filter(!country %in% c(\"FRACNP\",\"DEUTE\",\"DEUTW\",\"GBRCENW\",\"GBR_NP\"))\n\nAfter age 90, sex ratios become quite jerky due to the relatively small numbers of survivors. I decided to aggregate data after the age 90.\n\n# summarize all ages older than 90 (too jerky)\nsr_age_90 <- sr_age %>% filter(age %in% 90:110) %>% \n        group_by(country) %>% summarise(sr_age = mean(sr_age, na.rm = T)) %>%\n        ungroup() %>% transmute(country, age=90, sr_age)\n\ndf_plot <- bind_rows(sr_age %>% filter(!age %in% 90:110), sr_age_90)\n\nFinally, I plot the resulting sex ratios.\n\n# get nice font\nlibrary(extrafont)\nmyfont <- \"Roboto Condensed\"\n\n# finaly - plot\ngg <- ggplot(df_plot, aes(age, sr_age, color = country, group = country))+\n        geom_hline(yintercept = 100, color = 'grey50', size = 1)+\n        geom_line(size = 1)+\n        scale_y_continuous(limits = c(0, 120), expand = c(0, 0), breaks = seq(0, 120, 20))+\n        scale_x_continuous(limits = c(0, 90), expand = c(0, 0), breaks = seq(0, 80, 20))+\n        xlab('Age')+\n        ylab('Sex ratio, males per 100 females')+\n        facet_wrap(~country, ncol=6)+\n        theme_minimal(base_family = myfont, base_size = 15)+\n        theme(legend.position='none',\n              panel.border = element_rect(size = .5, fill = NA))\n\ngg\n\n\nThere is quite a variety in the sex ratio profiles. If the initial prevalence of males equalizes in Japan, Sweden, or Norway at around 60, in Russia, Belarus, and Ukraine this happens at around 30 due to very high male mortality. In many countries there are pronounced bumps in the sex ratio at ages 20-30, that are likely to be caused by international migration. For example, Scotland, Northern Ireland, Portugal, and New Zealand are experiencing substantial outflow of young men.\nWhat happened in Taiwan?\n\n\nThis post is based on my earlier tweet and gist."
  },
  {
    "objectID": "2017/hmd-male-mortality-rus-jpn/index.html",
    "href": "2017/hmd-male-mortality-rus-jpn/index.html",
    "title": "Male mortality in Russia and Japan",
    "section": "",
    "text": "Russia is sadly notorious for its ridiculously high adult male mortality. According to Human Mortality Database data (2010), the probability for a Russian men to survive from 20 to 60 was just 0.64 1. For women the probability is 0.87. This huge gender disproportion in mortality results in a peculiar sex ratio profile (see my old DemoTrends post and the previous blog post).1 To compare, the same probabilities for males in some developed countries are: France (0.89), Japan (0.92), US (0.87), UK (0.91).\nNow let’s compare age-specific mortality rates of Russian men to that of the Japanese. For years and years Japan performs best in reducing mortality. It became standard to compare mortality schedules of other countries to the Japanese one 2.2 See for example the recent NIDI working paper of Balachandran et. al (2017).\nFirst, I need to get HMD data for both Russian and Japanese males. Again, I am using the amazing R package HMDHFDplus of Tim Riffe to download HMD data with just a couple of lines of R code.\n\n# load required packages\nlibrary(tidyverse) # version 1.0.0\nlibrary(HMDHFDplus) # version 1.1.8\n\n# load life tables for men, RUS and JPN\nrus <- readHMDweb('RUS', \"mltper_1x1\", ik_user_hmd, ik_pass_hmd)\njpn <- readHMDweb('JPN', \"mltper_1x1\", ik_user_hmd, ik_pass_hmd)\n\nPlease note, the arguments ik_user_hmd and ik_pass_hmd are my login credidantials at the website of Human Mortality Database, which are stored locally at my computer. In order to access the data, one needs to create an account at http://www.mortality.org/ and provide his own credidantials to the readHMDweb() function.\nNext, I select the most recent year for comparison, 2014, and compute the rate ratio of age specific mortality rates.\n\n# compare mortality rates for 2014\nru <- rus %>% filter(Year == 2014) %>% transmute(age = Age, rus = mx)\njp <- jpn %>% filter(Year == 2014) %>% transmute(age = Age, jpn = mx)\ndf <- left_join(jp, ru, 'age') %>% mutate(ru_rate = rus / jpn)\n\nFinally, I plot the resulting rate ratio of male mortality in Russia and Japan.\n\n# get nice font\nlibrary(extrafont)\nmyfont <- \"Roboto Condensed\"\n\n# plot\ngg <- ggplot(df, aes(age, ru_rate)) + \n        geom_hline(yintercept = 1, color = 'red') +\n        geom_line(aes(group=1)) + \n        scale_y_continuous('mortality rate ratio',\n                           breaks = 0:10, labels = 0:10, limits = c(0, 10)) +\n        annotate('text',x=c(0, 55), y = c(1.75,5), \n                 color = c('red','black'), hjust = 0, vjust = 1, size = 7,\n                 label = c('Japan','Russia'), family = myfont) +\n        ggtitle('Compare age-specific mortality of males',\n                subtitle = \"Russia and Japan, 2014, HMD\")+\n        theme_bw(base_size = 15, base_family = myfont)\n\n\nIn the middle ages, male mortality in Russian is up to 10 times higher than in Japan!\n\n\nThis post is based on my earlier tweet and gist."
  },
  {
    "objectID": "2017/who-is-old/index.html",
    "href": "2017/who-is-old/index.html",
    "title": "Who is old? Visualizing the concept of prospective ageing with animated population pyramids",
    "section": "",
    "text": "This post is about illustrating the concept of prospective ageing, a relatively fresh approach in demography to refine our understanding of population ageing. This visualization was created in collaboration with my colleague Michael Boissonneault: (mostly) his idea and (mostly) my implementation. The animated visualization builds upon Michael’s viz prepared for the submission to the highly anticipated event at the end June 2017 – Rostock Retreat Visualization. My visualization of the provided Swedish dataset can be found in the previous post."
  },
  {
    "objectID": "2017/who-is-old/index.html#prospective-ageing",
    "href": "2017/who-is-old/index.html#prospective-ageing",
    "title": "Who is old? Visualizing the concept of prospective ageing with animated population pyramids",
    "section": "Prospective ageing",
    "text": "Prospective ageing\nOver the past decades the alarmist views of the upcoming population ageing disaster became widely spread. True, with the growing number of countries approaching the ending of the Demographic Transition, the average/median age of their population increases rapidly, which is something unprecedented in the documented human history. But does that imply an unbearable burden of elderly population in the nearest future? Not necessarily.\nThe demographic prospects depend a lot on how we define ageing. Quite recently Waren Sanderson and Sergei Scherbov proposed 1 2 a new way to look at population ageing, they called it Prospective Ageing. The underlying idea is really simple – age is not static: a person aged 65 (the conventional border deliminating elderly population) today is in many aspects not the same as a person ages 65 half a century ago. Health and lifespan improved a lot in the last decades, meaning that today people generally have much more remaining years of life at the moment of being recognized as elderly by the conventional standards. Thus, Sanderson and Scherbov proposed to define elderly population based on the estimation of the expected remaining length of life rather than years lived. Such a refined view of population ageing disqualifies the alarmist claims of the approaching demographic collapse. The would be paradoxical title of one the latest papers of Sanderson and Scherbov 3 summarizes the phenomenon nicely: Faster Increases in Human Life Expectancy Could Lead to Slower Population Aging.1 Sanderson, W. C., & Scherbov, S. (2005). Average remaining lifetimes can increase as human populations age. Nature, 435(7043), 811–813. Retrieved from http://www.nature.com/nature/journal/v435/n7043/abs/nature03593.html2 Sanderson, W. C., & Scherbov, S. (2010). Remeasuring Aging. Science, 329(5997), 1287–1288. https://doi.org/10.1126/science.11936473 Sanderson, W. C., & Scherbov, S. (2015). Faster Increases in Human Life Expectancy Could Lead to Slower Population Aging. PLoS ONE, 10(4), e0121922. http://doi.org/10.1371/journal.pone.0121922\nOf course, the choice of the new ageing threshold is a rather arbitrary question 4. It became usual to define this threshold at the remaining life expectancy of 15 years.4 See the working paper of my colleagues devoted to this question"
  },
  {
    "objectID": "2017/who-is-old/index.html#population-pyramids-for-sweden",
    "href": "2017/who-is-old/index.html#population-pyramids-for-sweden",
    "title": "Who is old? Visualizing the concept of prospective ageing with animated population pyramids",
    "section": "Population pyramids for Sweden",
    "text": "Population pyramids for Sweden\nPopulation pyramid is a simple and nice way to represent population composition and to compare changes in the age structure of a given population over time. We show the difference between conventional and prospective approach to the definition of the elderly population using Swedish data for the last half a century. Sweden is a natural choice for demographers aiming to play with rich and reliable data.\nThe data used for this visualization comes from Human Mortality Database. It can be easily accessed from an R session using HMDHFDplus package by Tim Riffe (for examples see my previous posts - one and two). For this exercise, I will use the dataset for Sweden that was provided for an application task for Rostock Retreat Visualization 5.5 By using this data, I agree to the user agreement"
  },
  {
    "objectID": "2017/who-is-old/index.html#data-preparation",
    "href": "2017/who-is-old/index.html#data-preparation",
    "title": "Who is old? Visualizing the concept of prospective ageing with animated population pyramids",
    "section": "Data preparation",
    "text": "Data preparation\n\n# load packages\nlibrary(tidyverse)\nlibrary(extrafont)\nmyfont <- \"Ubuntu Mono\"\n\n# download data\ndf_swe <- read_csv(\"http://www.rostock-retreat.org/files/application2017/SWE.csv\")\n# copy at https://ikashnitsky.github.io/doc/misc/application-rostock-retreat/SWE.csv\n\n# define the selection of years to visualize\nyears <- c(seq(1965, 2010, 5),2014)\n\ndf <- df_swe %>% select(Year, Sex, Age, Exposure, ex) %>% \n        filter(Year %in% years) %>% \n        mutate(old_c = Age >= 65, \n               old_p = ex <= 15) %>% \n        gather(\"type\", \"old\", contains(\"old\")) %>% \n        group_by(Year, Sex, type) %>% \n        mutate(share = Exposure / sum(Exposure)) %>% \n        ungroup() %>% \n        mutate(share = ifelse(Sex == 'f', share, -share))\n        \nnames(df) <- names(df) %>% tolower()\n\n\ndf_old <- df %>% filter(old == T) %>% \n        group_by(year, sex, type, old) %>% \n        summarise(cum_old = sum(share)) %>% \n        ungroup()"
  },
  {
    "objectID": "2017/who-is-old/index.html#visualization",
    "href": "2017/who-is-old/index.html#visualization",
    "title": "Who is old? Visualizing the concept of prospective ageing with animated population pyramids",
    "section": "Visualization",
    "text": "Visualization\nLet’s first have a look at the pyramids in 1965, 1990, and 2014 (the latest available year).\n\ngg_three <- ggplot(df %>% filter(year %in% c(1965, 1990, 2014))) +\n        geom_bar(aes(x = age, y = share, fill = sex, alpha = old), \n                 stat = 'identity', width = 1)+\n        geom_vline(xintercept = 64.5, size = .5, color = 'gold')+\n        scale_y_continuous(breaks = c(-.01, 0, .01), labels = c(.01, 0, .01),\n                           limits = c(-.02, .02), expand = c(0,0))+\n        facet_grid(year~type) +\n        theme_minimal(base_family = 'Ubuntu Mono') +\n        theme(strip.text = element_blank(),\n              legend.position = 'none',\n              plot.title = element_text(hjust = 0.5, size = 20),\n              plot.caption = element_text(hjust = 0, size = 10)) + \n        coord_flip() + \n        \n        labs(y = NULL,\n             x = 'Age') +\n        \n        geom_text(data = data_frame(type = c('old_c', 'old_p'),\n                                    label = c('CONVENTIONAL', 'PROSPECTIVE')),\n                  aes(label = label), \n                  y = 0, x = 50, size = 5, vjust = 1, \n                  family = 'Ubuntu Mono') +\n        \n        geom_text(data = df_old %>% filter(year %in% c(1965, 1990, 2014), sex == 'f'), \n                  aes(label = year),\n                  y = 0, x = 30, vjust = 1, hjust = .5, size = 7, \n                  family = 'Ubuntu Mono') +\n        \n        geom_text(data = df_old %>% filter(year %in% c(1965, 1990, 2014), sex == 'f'), \n                  aes(label = paste('Elderly\\nfemales\\n', round(cum_old*100,1), '%')),\n                  y = .0125, x = 105, vjust = 1, hjust = .5, size = 4, \n                  family = 'Ubuntu Mono') +\n        \n        geom_text(data = df_old %>% filter(year %in% c(1965, 1990, 2014), sex == 'm'), \n                  aes(label = paste('Elderly\\nmales\\n', round(-cum_old*100,1), '%')),\n                  y = -.0125, x = 105, vjust = 1, hjust = .5, size = 4, \n                  family = 'Ubuntu Mono')\n\n\n#ggsave(\"figures/three-years.png\", gg_three, width = 6, height = 8)"
  },
  {
    "objectID": "2017/who-is-old/index.html#animated-pyramid",
    "href": "2017/who-is-old/index.html#animated-pyramid",
    "title": "Who is old? Visualizing the concept of prospective ageing with animated population pyramids",
    "section": "Animated pyramid",
    "text": "Animated pyramid\nTo get an animated pyramid I simply saved all the separate plots and then use the very convenient free online tool to make an animated image - GIFCreator 6.6 I did try to play with the package gganimate, though it produced a strange output.\n\nnote <- 'The population pyramid can be used to compare change in the age structure of a given population over time. In many cases, doing so gives the impression of rapid aging. This is due to the fact that age is represented as a static variable; however, as Sanderson and Scherbov showed repeatedly, age is not static: a person age 65 in 1965 is in many aspects not the same as a person age 65 in 2015. In the right panel, old age is considered to start when the period remaining life expectancy reaches 15 years, thereby providing another look at the change in the age structure of a population. The gold line deliminates the conventional border of old age at 65. Elderly populations are filled with non-transparent colors. Authors: Michael Boissonneault, Ilya Kashnitsky (NIDI)'\n\n# I will store the plots in a list\nplots <- list()\n\nfor (i in 1:length(years)){\n        \n        gg <- ggplot(df %>% filter(year == years[[i]])) +\n                geom_bar(aes(x = age, y = share, fill = sex, alpha = old), \n                         stat = 'identity', width = 1)+\n                geom_vline(xintercept = 64.5, size = .5, color = 'gold')+\n                scale_y_continuous(breaks = c(-.01, 0, .01), labels = c(.01, 0, .01),\n                                   limits = c(-.02, .02), expand = c(0,0))+\n                facet_wrap(~type, ncol = 2) +\n                theme_minimal(base_family = 'Ubuntu Mono') +\n                theme(strip.text = element_blank(),\n                      legend.position = 'none',\n                      plot.title = element_text(hjust = 0.5, size = 20),\n                      plot.caption = element_text(hjust = 0, size = 10)) + \n                coord_flip() + \n                \n                labs(title = paste(\"Sweden\", years[i]),\n                     caption = paste(strwrap(note, width = 106), collapse = '\\n'), \n                     y = NULL,\n                     x = 'Age') +\n                \n                geom_text(data = data_frame(type = c('old_c', 'old_p'),\n                                            label = c('CONVENTIONAL', 'PROSPECTIVE')),\n                          aes(label = label), \n                          y = 0, x = 115, size = 5, vjust = 1, \n                          family = 'Ubuntu Mono') +\n                \n                geom_text(data = df_old %>% filter(year == years[[i]], sex == 'f'), \n                          aes(label = paste('Elderly\\nfemales\\n', round(cum_old*100,1), '%')),\n                          y = .0125, x = 105, vjust = 1, hjust = .5, size = 4, \n                          family = 'Ubuntu Mono') +\n                \n                geom_text(data = df_old %>% filter(year == years[[i]], sex == 'm'), \n                          aes(label = paste('Elderly\\nmales\\n', round(-cum_old*100,1), '%')),\n                          y = -.0125, x = 105, vjust = 1, hjust = .5, size = 4, \n                          family = 'Ubuntu Mono')\n        \n        plots[[i]] <- gg\n}\n\n# # a loop to save the plots\n# for (i in 1:length(years)){\n#         ggsave(paste0('figures/swe-', years[i], '.png'), plots[[i]], \n#                       width = 8, height = 5.6)\n# }"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": ".",
    "section": "",
    "text": "CV"
  },
  {
    "objectID": "about.html#bio",
    "href": "about.html#bio",
    "title": ".",
    "section": "BIO",
    "text": "BIO\nI was born in Israel, grew up in Moscow, during my PhD years lived in The Hague, and now live in Odense. Married and have two daughters. I got a bachelors in geography from Moscow State University in 2012, masters in demography from the National Research University Higher School of Economics (Moscow) in 2014, and PhD from University of Groningen in 2020.\n\n\nFeel free to contact me via email\nilya.kashnitsky at gmail dot com\nIlya"
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "Academic CV",
    "section": "",
    "text": "Download current CV"
  },
  {
    "objectID": "dd.html",
    "href": "dd.html",
    "title": ".",
    "section": "",
    "text": "Demographic Digest is a regular column at Demoscope Weekly which publishes (in Russian) brief summaries of fresh demographic papers from the best academic journals.\n\nДемографический Дайджест – регулярная рубрика журнала Демоскоп Weekly, в которой приводятся краткие обзоры демографических статей, публикуемых в ведущих зарубежных журналах.\n\n\n[PROJECT WEBSITE]\n\n\n\n[ARCHIVE]"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "demographeR’s notes",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "demographeR’s notes",
    "section": "2021",
    "text": "2021\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#section-2",
    "href": "index.html#section-2",
    "title": "demographeR’s notes",
    "section": "2020",
    "text": "2020\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#section-3",
    "href": "index.html#section-3",
    "title": "demographeR’s notes",
    "section": "2019",
    "text": "2019\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#section-4",
    "href": "index.html#section-4",
    "title": "demographeR’s notes",
    "section": "2018",
    "text": "2018\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#section-5",
    "href": "index.html#section-5",
    "title": "demographeR’s notes",
    "section": "2017",
    "text": "2017\n\n\n    \n                  \n            March 31, 2017\n        \n        \n            Who is old? Visualizing the concept of prospective ageing with animated population pyramids\n            \n                \n                    r\n                \n                \n                    animaion\n                \n                \n                    pyramid\n                \n                \n                    sweden\n                \n                \n                    prospective ageing\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            March 16, 2017\n        \n        \n            R, GIS, and fuzzyjoin to reconstruct demographic data for NUTS regions of Denmark\n            \n                \n                    r\n                \n                \n                    rspatial\n                \n                \n                    denmark\n                \n                \n                    nuts\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            February 25, 2017\n        \n        \n            Gender gap in Swedish mortality\n            \n                \n                    r\n                \n                \n                    tw\n                \n                \n                    death rates\n                \n                \n                    sweden\n                \n                \n                    sex gap\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            February 14, 2017\n        \n        \n            30 issues of Demographic Digest - the most frequent journals\n            \n                \n                    r\n                \n                \n                    demography\n                \n                \n                    bibliometrics\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            February 6, 2017\n        \n        \n            Male mortality in Russia and Japan\n            \n                \n                    r\n                \n                \n                    tw\n                \n                \n                    hmd\n                \n                \n                    death rates\n                \n                \n                    russia\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            February 5, 2017\n        \n        \n            Sex ratios in all countries from Human Mortality Database\n            \n                \n                    r\n                \n                \n                    tw\n                \n                \n                    hmd\n                \n                \n                    death rates\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            January 29, 2017\n        \n        \n            Hello R world post\n            \n                \n                    r\n                \n            \n            \n        \n    \n\n\nNo matching items"
  }
]