{
  "hash": "ae2f8c55c43645f1787b7234a1d4d2ef",
  "result": {
    "markdown": "---\ntitle: \"Save space in faceted plots\"\ndescription-meta: \"{{< meta website.description >}}\"\ndate: \"2023-02-27\"\nimage: teaser.jpg\ncategories: [r, dataviz, trick, facet]\n---\n\n\n\n\n\n***\n\nFaceting[^1] is probably the most distinctive feature that defined the early success and wide adoption of `ggplot2`. Small-multiples are often a great dataviz choice.[^2] But one common problem is when your panels for the subsets of data requite vastly different amount of space. By default the panels in faceted ggplots are all of the same size. If the data subsets are very different is size -- a common case yould be time series of varying length -- this results in a lot of plot space wasted in the panels with little data to show. In this post I'm showing how to deal with this common issue.\n\nLet me first show you the solution. The cornerstone source of data in demography is [Human Mortality Database][hmd]. It provides demographic data of highest possible quality for a selection of available countries. The availability of data varies vastly across countries -- from 270+ years in Sweden to a handful of decades in many other countries with less exceptional population data statistics. Here are two plots from my recent papers that use HMD.\n\n\n[![Figure A3 from @zarulli2021p](pnas.png)](https://ikashnitsky.github.io/2023/shrink-space/pnas.png){.preview-image}\n\n[![Figure 3 from @aburto2022ije](ije.png)](https://ikashnitsky.github.io/2023/shrink-space/ije.png)  \n\nThe trick in these plots is that countries are arranged by the length of time series. The width of each panel is net to the longest time series observed omong the countries in the column of small multiples. This is easily achieved via the parameter `space = \"free\"` in the `facet_grid()` call. \n\nOne slightly annoying nuance is that the `space = \"free\"` parameter is *only* available `facet_grid()`. That's why we need to specify both column and row variables for the layout of small multiples. Yet, usually we have just one meaningful faceting variable in such a setup, country in the examples above. That's why the steps of data preparation for these plots included the creation of variables `row` and `column` that explicitly located the position of each small multiple. You can find code that replicates both figures shown above [here][gh-pnas] and [here][gh-ije]. To illustrate the approach in this post we'll use a minimal example with generated data.\n\nConsider a case when we have 6 countries, 3 of which have relatively long time series and 3 have relatively short period of observed data. To stay a bit closer to the examples above, let's say that we have data for Sweden (271 years worth of data), Denmark (186 years), Netherlands (169), Portugal (81), Japan (74), and Estonia (60). Let's generate some random data of the specified time series' length.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(911)\n\nraw <- tibble(\n    country = c(\"Sweden\", \"Denmark\", \"Netherlands\", \"Portugal\", \"Japan\", \"Estonia\"),\n    n_years = c(271, 186, 169, 81, 74, 60)\n) |> \n    # mutate(country = country |> as_factor()) |> \n    group_by(country) |> \n    group_modify(~ runif(n = .x$n_years) |> tibble(random = _)) |> \n    mutate(year = 2022 - seq_along(country)) |> \n    ungroup()\n```\n:::\n\n\nLet's say I want a plot with 3 rows and 2 columns. First, here's how a simple faceted plot would look like.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw |> \n    ggplot(aes(year, random, color = country))+\n    geom_path()+\n    facet_wrap(~country, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nSee how much space is just wasted in the plot. \n\nNext, we'll do the trick outlined above: arrange the countries by the length of available data and shrink the unused space in the two columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\narr <- raw |> \n    mutate(\n        country = country |> as_factor() |> fct_infreq()\n    ) |>\n    arrange(country, year) |> \n    # create facet positioning variables on a 3x2 canvas\n    mutate(\n        row = country |>\n            lvls_revalue(\n                new_levels = 1:3 |> rep(2) |> paste() \n            ),\n        col = country |>\n            lvls_revalue(\n                new_levels = 1:2 |> rep(each = 3) |> paste() \n            )\n    ) |>\n    ungroup()\n\narr |> \n    ggplot(aes(year, random, color = country))+\n    geom_path()+ \n    facet_grid(row~col, scales = \"free_x\", space = \"free\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThat's it, the rest is just visual polishing of the plot. At the very least, we need to get rid of the facet strips which are now meaningless counts of rows and columns and add country names as text annotations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\narr |> \n    ggplot(aes(year, random, color = country))+\n    geom_path()+ \n    facet_grid(row~col, scales = \"free_x\", space = \"free\")+\n    geom_text(\n        data = function(x) x|> distinct(country, row, col),\n        aes(label = country), x = 2020, y = 1.05,\n        hjust = 1, vjust = 0, size = 5, \n        family = \"ah\", fontface = 2\n    )+\n    scale_y_continuous(limits = c(0, 1.15), breaks = seq(0, 1, .25))+\n    scale_x_continuous(breaks = seq(1750, 2000, 50))+\n    theme(\n        legend.position = \"none\",\n        strip.text = element_blank()\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nEnjoy more dataviz freedom with faceting tricks =)\n\n\n[^1]: This is the term used for small-multiples in `ggplot2`\n[^2]: See [the post][bg] in which I improve an overloaded line chart using small-multiples\n\n[bg]: https://ikashnitsky.github.io/2020/background-data/\n[hmd]: https://www.mortality.org\n[gh-pnas]: https://github.com/ikashnitsky/sex-gap-e0-pnas\n[gh-ije]: https://github.com/OxfordDemSci/ex2020\n\n\n    \n\n\n\n\n\n***\n\n::: {.callout-note}\n# This post is one in the **faceting series**. Other posts:\n- [Show all data in the background of your faceted ggplot][bg]\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}