{
  "hash": "e2c016556649cc909d7e5eb219491ba9",
  "result": {
    "markdown": "---\ntitle: \"30 issues of Demographic Digest - the most frequent journals\"\ndescription-meta: \"{{< meta website.description >}}\"\ndate: \"2017-02-14\"\nimage: teaser.png\ncategories: [r, demography, bibliometrics]\n---\n\n\n***\n\nThis week, the 30-th issue of my Demographic Digest [was published](http://demoscope.ru/weekly/2017/0715/digest01.php).   \n\n[Demographic Digest](/dd) is my project that started in November 2015. Twice a month I select fresh demographic papers and write brief summaries of them in Russian to be published in [Demoscope Weekly](http://demoscope.ru), the most popular Russian journal/website in social sciences. If you read Russian, you may want to browse [the archive](http://demoscope.ru/weekly/arc/arcdigest.php) or visit [the website](https://ikashnitsky.github.io/dem-digest/) of the project (which is still to be filled).  \n\nThe project is in the transitional phase now. Since 2016 Demographic Digest welcomes contributions from from external authors. In February 2017 I launched the [first iteration of a project](https://www.hse.ru/org/hse/pfair/199751652.html) for the students of National Research University Higher School of Economics.  \n\nTo draw a line after the first phase of the project, I analysed what journals supplied Demographic Digest most frequently. Also, my desire was to try visualizing data with treemaps, which I mentioned in the bonus part[^1] of [the latest digest issue](http://demoscope.ru/weekly/2017/0715/digest03.php).  \n\nFor that, I exported the bibliographic data of all the papers covered in Demographic Digest. I use [Zotero](https://www.zotero.org) as a reference manager; the paper records are exported as a single .bib file, which I then saved as a [plain text (.txt) file](/share/1702-dd-stats/dd-bib.txt). Then I read this data in R, cleaned it, and finally visualized.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load required packages\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(readxl)\nlibrary(extrafont)\nmyfont <- \"Roboto Condensed\"\n\ndf <- data.frame(\n    lines = readLines(\"https://ikashnitsky.github.io/share/1702-dd-stats/dd-bib.txt\")\n) |> \n        mutate(lines = lines |> as.character()) |> \n        \n        # grab only the lines that contain journals' titles\n        filter(lines |> str_detect(\"journaltitle\")) |> \n        \n        # remove everything that is not the bare journal's title\n        transmute(\n            journals = lines |> \n                       str_replace_all(\n                            pattern = \"\\tjournaltitle = |\\\\Q{\\\\E|\\\\Q}\\\\E,|\\\\Q}\\\\E\", \n                            replacement = \"\"\n                       )\n        ) |> \n        # calculate frequencies\n        group_by(journals) |> \n        summarise(n = n())\n```\n:::\n\n\nFor one journal title, Ageing and Society, I failed to replace the \"\\&\" using [regular expressions](https://www.rstudio.com/wp-content/uploads/2016/09/RegExCheatsheet.pdf). This one is to be fixed manually. I also corrected the title of Lancet journal removing the article \"The\". Finally, I corrected the frequencies for Population Studies and Population and Development Review subtracting 6, because for both journals I provided lists of most cited papers as a bonus. Following the same logic, I cleaned the data from the papers that appeared in the bonus part. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# correct \"Ageing and Society\"\ndf[1,1] <- \"Ageing and Society\"\n\n# correct the title of Lancet\ndf <- df |> \n    mutate(journals = journals |> str_replace(\"The Lancet\", \"Lancet\")) |>\n    # correct \"Population and Development Review\" and \"Population Studies\" for 6 each\n    # Reason - top cited papers bonus\n    mutate(\n        n = case_when(\n            journals %in% c(\n                \"Population and Development Review\", \n                \"Population Studies\"\n            ) ~ n - 6,\n            TRUE ~ n\n        )\n    )\n```\n:::\n\n\nTo provide some additional metrics of the journals, I downloaded bibliometric data from the [SCImago Journal & Country Rank project]()http://www.scimagojr.com/aboutus.php. Demographic journals usually have rather low SJR, compared to medical journals; that's why I downloaded the data only for journals in [Social Sciences](http://www.scimagojr.com/journalrank.php?area=3300) (the[.xlsx file](/doc/misc/dd-stats/scimagojr.xlsx)). Then I read the data in R and join to my data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read SJR data for journals in Social Sciences\nsjr <- readxl::read_excel(\n    \"https://ikashnitsky.github.io/share/1702-dd-stats/scimagojr.xlsx\", 1\n) |> \n        mutate(id = Title |> tolower())\n\n# join the data frames; note that I create an \"id\" variable in lower case\ndf_sjr <- left_join(df |> mutate(id = journals |> tolower), sjr, \"id\") \n```\n:::\n\n\nFinally, it's time to visualize the data. I use the amazing `treemap` package[^2].\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Treemap visualization\nlibrary(treemap)\n\ntreemap(dtf = df_sjr, \n        index = \"journals\", \n        vSize = \"n\", \n        vColor = \"SJR\", \n        type = \"value\",\n        n = 5,\n        palette = \"BrBG\", \n        border.col = \"grey10\", \n        title = \"Journals' frequency in Demographic Digest\",\n        title.legend = \"SJR (only social sciences)\",\n        fontfamily.title = myfont,\n        fontfamily.labels = myfont,\n        fontfamily.legend = myfont,\n        drop.unused.levels = T)\n```\n:::\n\n\n# Here is how the output looks\n\n![](treemap-dd-stats.png)\n\nNote that the lion's share of Population Studies is mainly explained by [the first issue of Demographic Digest](http://demoscope.ru/weekly/2015/0661/digest01.php), in which I covered all the papers from the brilliant special issue [Population â€” The long view](http://www.tandfonline.com/toc/rpst20/69/sup1).  \n\n***\n\n[^1]: I finish each issue of Demographic Digest with a bonus, in which I cover fun papers, discuss some academia related issues, or just provide link to cool visualizations and projects.\n[^2]: I also tried `portfolio` and `treemapify`, but liked the output from `treemap` most. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}