{
  "hash": "7d98317eb0a05d5ef79bb63c56deb4de",
  "result": {
    "markdown": "---\ntitle: \"Hello R world post\"\ndescription-meta: \"{{< meta website.description >}}\"\ndate: \"2017-01-29\"\ncategories: [r]\n---\n\n\n***\n\nWelcome to my blog!\n\nMy name is Ilya, I am a demographer. Here I plan to post some research related stuff. As I am crazy about [R](https://www.r-project.org), my post will touch upon this tool/environment -- I will share some tricks and cool visualizations. Eventually, I hope to contribute to the amazing [R-bloggers](https://www.r-bloggers.com) project. First, I am going to post older bits -- to gain momentum. \n\n***\nJust to start with, let me show you a small and handy self-written R function.   \nQuite often, visualizing data in R, we compose color palettes manually. It is nice to have a function that shows the actual colors of a vector with color values. Here it is.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse_colors <- function(colors_string){\n        n <- length(colors_string)\n        hist(1:n, breaks = 0:n, col = colors_string)\n}\n```\n:::\n\n\nThe function takes a vector of colors as input and produces a basic uniform histogram with one bar for each color, filled accordingly. Let's try it out. First, we create some colors, and then visualize them.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\npal <- brewer.pal(n = 9, name = 'BrBG')\nglimpse_colors(pal)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nEnjoy!\n\nP.S. If something similar exists in one of the well known packages, please tell me.\n\n***s\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}